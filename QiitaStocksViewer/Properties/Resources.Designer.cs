//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QiitaStocksViewer.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QiitaStocksViewer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   (アイコン) に類似した型 System.Drawing.Icon のローカライズされたリソースを検索します。
        /// </summary>
        public static System.Drawing.Icon AppIcon {
            get {
                object obj = ResourceManager.GetObject("AppIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   読込開始 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ButtonContent_LoadStart {
            get {
                return ResourceManager.GetString("ButtonContent_LoadStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CSVファイルに出力する に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ButtonContent_OutputCSV {
            get {
                return ResourceManager.GetString("ButtonContent_OutputCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ユーザーIDを記憶する に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CheckBox_isSave {
            get {
                return ResourceManager.GetString("CheckBox_isSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   アクセストークンを記憶する に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CheckBox_isSaveAccessToken {
            get {
                return ResourceManager.GetString("CheckBox_isSaveAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   コメント数 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_commentCount {
            get {
                return ResourceManager.GetString("ColumnHeaderName_commentCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いいね数 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_likeCount {
            get {
                return ResourceManager.GetString("ColumnHeaderName_likeCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   限定共有 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_limitedShare {
            get {
                return ResourceManager.GetString("ColumnHeaderName_limitedShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   投稿日 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_post {
            get {
                return ResourceManager.GetString("ColumnHeaderName_post", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ストック者数 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_stockCount {
            get {
                return ResourceManager.GetString("ColumnHeaderName_stockCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   タイトル に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_title {
            get {
                return ResourceManager.GetString("ColumnHeaderName_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最終更新日 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_update {
            get {
                return ResourceManager.GetString("ColumnHeaderName_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   URL に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColumnHeaderName_url {
            get {
                return ResourceManager.GetString("ColumnHeaderName_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   アクセストークン： に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string title_AccessToken {
            get {
                return ResourceManager.GetString("title_AccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Contributions： に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string title_Contributions {
            get {
                return ResourceManager.GetString("title_Contributions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Items： に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string title_ItemCount {
            get {
                return ResourceManager.GetString("title_ItemCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ユーザーID： に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string title_UserID {
            get {
                return ResourceManager.GetString("title_UserID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   QiitaStocksViewer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitle {
            get {
                return ResourceManager.GetString("WindowTitle", resourceCulture);
            }
        }
    }
}
